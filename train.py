#!/usr/bin/env python3
# Generated by MLC Compiler
# Auto-generated machine learning training script

# =====================================
# Model 1: SVM
# Backend: sklearn
# =====================================

kernel = linear
C = 1.000000

# Imports
import pandas as pd
from sklearn.model_selection import train_test_split
import joblib
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, classification_report

# Load dataset
dataset = pd.read_csv('./data.csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

# Split dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model: SVM
model = SVC(kernel="linear", C=1.000000)

print('ðŸš€ Starting training...')
model.fit(X_train, y_train)
print('âœ… Training completed!')

y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f'ðŸ“Š Accuracy: {accuracy:.4f}')
print('\nðŸ“‹ Classification Report:')
print(classification_report(y_test, y_pred))

# Save model
joblib.dump(model, 'model.pkl')
print('ðŸ’¾ Model saved as model.pkl')
# =====================================
# Model 2: LDA
# Backend: sklearn
# =====================================

solver = svd

# Imports
import pandas as pd
from sklearn.model_selection import train_test_split
import joblib
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
from sklearn.metrics import accuracy_score, classification_report

# Load dataset
dataset = pd.read_csv('./data.csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

# Split dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model: LDA
model = LinearDiscriminantAnalysis(solver="svd")

print('ðŸš€ Starting training...')
model.fit(X_train, y_train)
print('âœ… Training completed!')

y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f'ðŸ“Š Accuracy: {accuracy:.4f}')
print('\nðŸ“‹ Classification Report:')
print(classification_report(y_test, y_pred))

# Save model
joblib.dump(model, 'model.pkl')
print('ðŸ’¾ Model saved as model.pkl')
# =====================================
# Model 3: LinearRegression
# Backend: sklearn
# =====================================

fit_intercept = true

# Imports
import pandas as pd
from sklearn.model_selection import train_test_split
import joblib
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load dataset
dataset = pd.read_csv('./data.csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

# Split dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Model: LinearRegression
model = LinearRegression(fit_intercept=True)

print('ðŸš€ Starting training...')
model.fit(X_train, y_train)
print('âœ… Training completed!')

y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f'ðŸ“Š Mean Squared Error: {mse:.4f}')
print(f'ðŸ“Š RÂ² Score: {r2:.4f}')

# Save model
joblib.dump(model, 'model.pkl')
print('ðŸ’¾ Model saved as model.pkl')
